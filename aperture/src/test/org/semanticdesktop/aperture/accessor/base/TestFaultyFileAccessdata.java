/*
 * Copyright (c) 2008 Aduna and Deutsches Forschungszentrum fuer Kuenstliche Intelligenz DFKI GmbH.
 * All rights reserved.
 * 
 * Licensed under the Academic Free License version 3.0.
 */
package org.semanticdesktop.aperture.accessor.base;

import java.io.File;

import org.semanticdesktop.aperture.ApertureTestBase;
import org.semanticdesktop.aperture.util.IOUtil;
import org.semanticdesktop.aperture.util.ResourceUtil;

/**
 * Tests two cases of faulty access data files that were generated by Aperture
 * but for some reason the FileAccessData class wouldn't read them. 
 */
public class TestFaultyFileAccessdata extends ApertureTestBase {

    /**
     * Parses a file that used to throw an Exception.
     * @throws Exception 
     */
    public void testExceptionThrowingAccessData() throws Exception {
        File tempFile = File.createTempFile("ad-faulty", "xml");
        tempFile.deleteOnExit();
        IOUtil.writeStream(ResourceUtil.getInputStream(DOCS_PATH + "faulty-fileaccessdata-throws-exception.xml", getClass()), tempFile);
        FileAccessData fad = new FileAccessData(tempFile);
        fad.initialize();
        assertEquals(1137,fad.getSize());
        fad.store();
    }
    
    /**
     * Parses a file that used to throw an Exception.
     * @throws Exception 
     */
    public void testIgnoredAccessData() throws Exception {
        File tempFile = File.createTempFile("ad-faulty", "xml");
        tempFile.deleteOnExit();
        IOUtil.writeStream(ResourceUtil.getInputStream(DOCS_PATH + "faulty-fileaccessdata-is-ignored.xml", getClass()), tempFile);
        FileAccessData fad = new FileAccessData(tempFile);
        fad.initialize();
        assertEquals(850,fad.getSize());
        fad.store();
    }
}

